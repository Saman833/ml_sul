services:
  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: student
      POSTGRES_PASSWORD: student_pass
      POSTGRES_DB: chat_db
    volumes:
      - postgres_data_1:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - student_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U student -d chat_db || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s

  gptbot:
    build: .
    container_name: gptbot
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8672:8672"
    volumes:
      - logs_volume:/app/logs
    networks:
      - student_net

  streamlit:
    build: ./web
    container_name: streamlit
    ports:
      - "8501:8501"
    depends_on:
      gptbot:
        condition: service_started
    networks:
      - student_net

  # LLM Service - serves on port 11434 with /v1/chat/completions
  llm:
    build:
      context: ./llm
      dockerfile: Dockerfile.simple
    container_name: llm
    ports:
      - "11434:11434"
    networks:
      - student_net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Classifier Service - pulls champion model from MLflow experiments
  classifier:
    build: ./classifier
    container_name: classifier
    ports:
      - "8000:8000"
    volumes:
      - ./lora_trainer/experiments:/app/experiments
    environment:
      - MLFLOW_TRACKING_URI=file:///app/experiments/quick_test/mlruns
      - PREFERRED_EXPERIMENT=high_performance_model
    networks:
      - student_net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Orchestrator Gateway - forwards /predict to classifier and /get_message to LLM
  orchestrator:
    build: ./orchestrator
    container_name: orchestrator
    ports:
      - "8080:8080"
    depends_on:
      - classifier
      - llm
    networks:
      - student_net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data_1:
  logs_volume:

networks:
  student_net:
    driver: bridge
